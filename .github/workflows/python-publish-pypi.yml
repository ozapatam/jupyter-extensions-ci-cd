# This workflows will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Upload Python Package to PyPi

on:
  push:
    tags:
       - '*/*'
  
jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Install Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - name: Install node
      uses: actions/setup-node@v1
      with:
       node-version: '12.x'
    - name:  Set Env pkg  and version
      run: |
        echo ::set-env name=PACKAGE_TAG::${GITHUB_REF#refs/*/}
        echo ::set-env name=PACKAGE_NAME::$(echo  ${GITHUB_REF#refs/*/} | cut -d / -f 1)
        echo ::set-env name=PACKAGE_VERSION::$(echo  ${GITHUB_REF#refs/*/} | cut -d / -f 2)
    - name: Print Variables
      run: |
        echo $PACKAGE_NAME
        echo ${{ env.PACKAGE_NAME }}
        echo $PACKAGE_VERSION
        echo ${{ env.PACKAGE_VERSION }}
        echo $PACKAGE_TAG
        echo ${{ env.PACKAGE_TAG }}
    - name: Install dependencies ${{ env.PACKAGE_VERSION }}
      run: |
        cd $PACKAGE_NAME
        python -m pip install --upgrade pip
        pip install setuptools wheel twine jupyter_packaging jupyterlab
    - name: Build and publish ${{ env.PACKAGE_VERSION }}
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        cd $PACKAGE_NAME
        python setup.py sdist bdist_wheel
        twine upload --repository testpypi dist/*
        
